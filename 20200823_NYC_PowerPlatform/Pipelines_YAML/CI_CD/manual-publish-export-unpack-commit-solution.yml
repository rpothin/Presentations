#NYCPowerPlatform2020
# Get solution from a dev environment and push its content to work branch in repo

# Input variables:
# - CommitMessage: Commit message
# - ServiceConnectionName: Service Connection to use (the one associated to the dev environment targeted)
# - SolutionName: Name of the solution targeted

trigger: none # Pipeline triggered manually

name: $[ variables['branchName'] ]

# Get the full name of the targeted branch, extracted from 'Build.SourceBranch' or 'System.PullRequest.SourceBranch' predefined variables
variables:
  ${{ if startsWith(variables['Build.SourceBranch'], 'refs/heads/') }}:
    branchName: $[ replace(variables['Build.SourceBranch'], 'refs/heads/', '') ]
  ${{ if startsWith(variables['Build.SourceBranch'], 'refs/pull/') }}:
    branchName: $[ replace(variables['System.PullRequest.SourceBranch'], 'refs/heads/', '') ]

# Definition of the agent used in this pipeline
pool:
  name: Azure Pipelines
  vmImage: 'windows-2019'

steps:
# Install the Power Platform Build Tools
- task: PowerPlatformToolInstaller@0
  inputs:
    DefaultVersion: true

# Publish all customizations on the targeted dev environment
- task: PowerPlatformPublishCustomizations@0
  inputs:
    authenticationType: 'PowerPlatformSPN'
    PowerPlatformSPN: '$(ServiceConnectionName)'

# Export the targeted solution from the targeted dev environment as unmanaged
- task: PowerPlatformExportSolution@0
  inputs:
    authenticationType: 'PowerPlatformSPN'
    PowerPlatformSPN: '$(ServiceConnectionName)'
    SolutionName: '$(SolutionName)'
    SolutionOutputFile: '$(Build.ArtifactStagingDirectory)\$(SolutionName).zip'

# Unpack the unmanaged solution we got in the previous task
- task: PowerPlatformUnpackSolution@0
  inputs:
    SolutionInputFile: '$(Build.ArtifactStagingDirectory)\$(SolutionName).zip'
    SolutionTargetFolder: 'UnmanagedSolutionsUnpacked/$(SolutionName)'

# Commit unpack unmanaged solution we got in the previous task
- task: CmdLine@2
  inputs:
    script: |
      echo commit all changes
      git config user.email "raphael@powerpanda.onmicrosoft.com"
      git config user.name "Automatic Build"

      echo branch full name $(branchName)
      git checkout $(branchName)
      git add --all
      git commit -m "$(CommitMessage)"
         
      echo push code to new repo
      git -c http.extraheader="AUTHORIZATION: bearer $(System.AccessToken)" push origin $(branchName)
    displayName: 'Commit Solution Files to Source Control'